@model TrueCrimeRepo.Models.CrimeCreate

@{
    ViewBag.Title = "Create";
}

<img src="~/Images/addtruecrime.png"/>
@*<h2>Add a new True Crime for our repo</h2>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4></h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-8">
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsCrimeSolved, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-8" style="color: black;">
            @Html.EnumDropDownListFor(model => model.IsCrimeSolved, new { htmlAttributes = new { @class = "form-control" } } )
            @Html.ValidationMessageFor(model => model.IsCrimeSolved, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @*<div class="form-group">
        @Html.LabelFor(model => model.Perpetrator, "Perpetrator", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.PerpetratorID, new SelectList(ViewBag.Perpetrators, "PerpetratorID", "Name"), "Select Perpetrator")
            @Html.ValidationMessageFor(model => model.PerpetratorID, "", new { @class = "text-danger" })
        </div>
    </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.Perpetrator, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Perpetrator, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Perpetrator, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
</div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
